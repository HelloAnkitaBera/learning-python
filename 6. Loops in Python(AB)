{"cells":[{"cell_type":"markdown","metadata":{"id":"-Ud1FnOFhEgb"},"source":["# **4. Loops: Automating Repetitive Tasks**  \n","4.1 The `for` Loop  \n","- Iterating over a range or list.  \n","- Writing a program to display multiplication tables.  \n","\n","4.2 The `while` Loop  \n","- When and how to use a `while` loop.  \n","- Writing a program to simulate a countdown timer.  \n","\n","4.3 Loop Control Keywords  \n","- Understanding `break`, `continue`, and `pass`  \n","- Example: Skipping Numbers or Breaking Out of a Loop"]},{"cell_type":"markdown","source":[],"metadata":{"id":"zXtZ0EkotV3k"}},{"cell_type":"markdown","metadata":{"id":"3X_vMKgYhQnN"},"source":["## **4.1 The `for` Loop**\n","\n","---\n","\n","#### **What is a `for` Loop?**  \n","A `for` loop in Python is used to iterate over a sequence (such as a list, tuple, string, or range) and execute a block of code repeatedly for each element in the sequence. This helps automate repetitive tasks efficiently.\n","\n","---\n","\n","#### **Syntax of a `for` Loop**  \n","```python\n","for variable in sequence:\n","    # Code block to execute\n","```\n","- **`variable`**: A placeholder for the current element in the sequence.  \n","- **`sequence`**: The iterable being traversed (e.g., a list, string, or range).  \n","- **Indentation**: The indented block is executed for each element.\n","\n","---\n","\n","#### **Examples of Using a `for` Loop**\n","\n","1. **Iterating Over a List**  \n","   ```python\n","   fruits = [\"apple\", \"banana\", \"cherry\"]\n","   for fruit in fruits:\n","       print(fruit)\n","   ```\n","   **Output:**  \n","   ```\n","   apple  \n","   banana  \n","   cherry\n","   ```\n","\n","2. **Using a Range**  \n","   The `range()` function generates a sequence of numbers.  \n","   ```python\n","   for i in range(5):\n","       print(i)\n","   ```\n","   **Output:**  \n","   ```\n","   0  \n","   1  \n","   2  \n","   3  \n","   4\n","   ```\n","\n","3. **Iterating Over a String**  \n","   ```python\n","   word = \"Python\"\n","   for letter in word:\n","       print(letter)\n","   ```\n","   **Output:**  \n","   ```\n","   P  \n","   y  \n","   t  \n","   h  \n","   o  \n","   n\n","   ```\n","\n","---\n","\n","#### **Advanced Use Cases of `for` Loops**\n","\n","1. **Using `range()` with Steps**  \n","   The `range()` function can include a step value to skip numbers.  \n","   ```python\n","   for i in range(0, 10, 2):\n","       print(i)\n","   ```\n","   **Output:**  \n","   ```\n","   0  \n","   2  \n","   4  \n","   6  \n","   8\n","   ```\n","\n","2. **Nested `for` Loops**  \n","   A loop inside another loop is called a nested loop.  \n","   ```python\n","   for i in range(3):\n","       for j in range(2):\n","           print(f\"i={i}, j={j}\")\n","   ```\n","   **Output:**  \n","   ```\n","   i=0, j=0  \n","   i=0, j=1  \n","   i=1, j=0  \n","   i=1, j=1  \n","   i=2, j=0  \n","   i=2, j=1\n","   ```\n","\n","3. **Using `for` Loops with Conditional Statements**  \n","   ```python\n","   numbers = [1, 2, 3, 4, 5]\n","   for num in numbers:\n","       if num % 2 == 0:\n","           print(f\"{num} is even\")\n","   ```\n","   **Output:**  \n","   ```\n","   2 is even  \n","   4 is even\n","   ```\n","\n","---\n","\n","#### **Applications of `for` Loops**\n","\n","1. **Displaying a Multiplication Table**  \n","   ```python\n","   for i in range(1, 11):\n","       print(f\"5 x {i} = {5 * i}\")\n","   ```\n","   **Output:**  \n","   ```\n","   5 x 1 = 5  \n","   5 x 2 = 10  \n","   ...  \n","   5 x 10 = 50\n","   ```\n","\n","2. **Calculating the Sum of Numbers in a List**  \n","   ```python\n","   numbers = [10, 20, 30, 40]\n","   total = 0\n","   for num in numbers:\n","       total += num\n","   print(\"Total:\", total)\n","   ```\n","   **Output:**  \n","   ```\n","   Total: 100\n","   ```\n","\n","3. **Finding Maximum in a List**  \n","   ```python\n","   numbers = [3, 7, 2, 8, 5]\n","   max_num = numbers[0]\n","   for num in numbers:\n","       if num > max_num:\n","           max_num = num\n","   print(\"Maximum:\", max_num)\n","   ```\n","   **Output:**  \n","   ```\n","   Maximum: 8\n","   ```\n","\n","---\n","\n","#### **Best Practices for Using `for` Loops**  \n","1. Use descriptive variable names for better readability.  \n","2. Minimize deeply nested loops to reduce complexity.  \n","3. Use built-in functions like `sum()` or `max()` where possible for simplicity.  \n","4. Ensure the sequence being iterated is finite to avoid infinite loops.  \n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"Q3cAEjxUiM-t"},"source":["## **MCQs: The `for` Loop**\n","\n","1. **What is the main purpose of a `for` loop in Python?**  \n","   a) To execute a block of code indefinitely  \n","   b) To iterate over a sequence   \n","   c) To terminate a program  \n","   d) To define a function  \n","\n","2. **What does the following code output?**  \n","   ```python\n","   for i in range(3):\n","       print(i)\n","   ```  \n","   a) `1 2 3`  \n","   b) `0 1 2`   \n","   c) `0 1 2 3`  \n","   d) `1 2`  \n","\n","3. **Which of the following is NOT a valid iterable in Python?**  \n","   a) List  \n","   b) String  \n","   c) Integer   \n","   d) Tuple  \n","\n","4. **What is the output of the following code?**  \n","   ```python\n","   for letter in \"Python\":\n","       print(letter, end=\", \")\n","   ```  \n","   a) `Python,`  \n","   b) `P, y, t, h, o, n,`   \n","   c) `Python`  \n","   d) `P y t h o n`  \n","\n","5. **What does the `range(5, 10)` function do in a `for` loop?**  \n","   a) Iterates from 5 to 10, including 10  \n","   b) Iterates from 5 to 9   \n","   c) Iterates from 6 to 10  \n","   d) Iterates from 6 to 9  \n","\n","6. **What is the output of the following code?**  \n","   ```python\n","   for i in range(0, 10, 3):\n","       print(i)\n","   ```  \n","   a) `0 3 6 9`   \n","   b) `0 1 2 3`  \n","   c) `3 6 9 12`  \n","   d) `3 6 9`  \n","\n","7. **What is the purpose of using a nested `for` loop?**  \n","   a) To iterate over multiple sequences simultaneously  \n","   b) To create infinite loops  \n","   c) To iterate over each element in a nested sequence   \n","   d) To reduce complexity  \n","\n","8. **Which of the following code snippets correctly calculates the sum of numbers in a list?**  \n","   a)  \n","   ```python\n","   numbers = [1, 2, 3]\n","   for num in numbers:\n","       sum = sum + num\n","   ```  \n","   b)  \n","   ```python\n","   numbers = [1, 2, 3]\n","   total = 0\n","   for num in numbers:\n","       total += num\n","   print(total)  # Correct  \n","   ```  \n","   c)  \n","   ```python\n","   numbers = [1, 2, 3]\n","   total = numbers[0]\n","   for num in numbers:\n","       total += total\n","   print(total)\n","   ```  \n","   d)  \n","   ```python\n","   numbers = [1, 2, 3]\n","   print(sum(numbers))\n","   ```   \n","\n","9. **What will happen if the sequence in a `for` loop is empty?**  \n","   a) The loop will raise an error  \n","   b) The loop will run once  \n","   c) The loop will be skipped   \n","   d) The program will terminate  \n","\n","10. **What is the output of the following code?**  \n","    ```python\n","    for i in range(1, 4):\n","        for j in range(2):\n","            print(f\"i={i}, j={j}\")\n","    ```  \n","    a)  \n","    ```\n","    i=1, j=1  \n","    i=2, j=2  \n","    i=3, j=3  \n","    ```  \n","    b)  \n","    ```\n","    i=1, j=0  \n","    i=1, j=1  \n","    i=2, j=0  \n","    i=2, j=1  \n","    i=3, j=0  \n","    i=3, j=1  \n","    ```   \n","    c)  \n","    ```\n","    i=1, j=2  \n","    i=2, j=2  \n","    i=3, j=2  \n","    ```  \n","    d)  \n","    ```\n","    i=0, j=0  \n","    i=1, j=1  \n","    i=2, j=2  \n","    ```\n","\n","---\n"]},{"cell_type":"markdown","metadata":{"id":"6uiBiebKi54K"},"source":["## **Coding Exercises: The `for` Loop**\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"OOMOcAaZiYAJ"},"source":["### **1. Print Numbers from 1 to 10**  \n","**Problem:** Write a `for` loop to print numbers from 1 to 10.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"tCwTiqOEm01Q"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zkOy-oOPiPVp"},"source":["### **2. Calculate the Sum of Numbers in a List**  \n","**Problem:** Write a program to calculate the sum of numbers in the list `[10, 20, 30, 40, 50]` using a `for` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"GEshhivNmv6o"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D4cnIVhIiF6j"},"source":["### **3. Iterate Over a String**  \n","**Problem:** Write a program to print each character in the string `\"Python\"` using a `for` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"N25jzUVqmpxV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DqnDCp_0f-Mc"},"source":["### **4. Display Even Numbers Between 1 and 20**  \n","**Problem:** Write a program to display all even numbers from 1 to 20 using a `for` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"18XpR3owmhsd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kR7Zghxwfyl6"},"source":["### **5. Print Multiplication Table**  \n","**Problem:** Write a program to print the multiplication table of 7 using a `for` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"8RK_cqB-mcNK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WXLu8VIlffDv"},"source":["### **7. Print a Triangle Pattern**  \n","**Problem:** Write a program to print the following pattern using a `for` loop:  \n","```\n","*  \n","* *  \n","* * *  \n","* * * *  \n","* * * * *\n","```  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"BdOGDTAAmTxu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"a8VB2ejRfTGu"},"source":["### **8. Count Vowels in a String**  \n","**Problem:** Write a program to count the number of vowels in the string `\"Hello World\"` using a `for` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"U0LWKHxYmMMz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_IogkoNdfMOy"},"source":["### **9. Reverse a List**  \n","**Problem:** Write a program to display the the list `[1, 2, 3, 4, 5]` in reverse order  using a `for` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"hmMy2P5RmFyr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6crtZVmofCU2"},"source":["### **10. Nested `for` Loop Example**  \n","**Problem:** Write a program to print a 3x3 grid of numbers using nested `for` loops.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"576UGPGCmAmO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Izvsa4pAifM1"},"source":["## **4.2 The `while` Loop**\n","\n","---\n","\n","#### **What is a `while` Loop?**  \n","A `while` loop in Python is used to repeatedly execute a block of code as long as a specified condition is `True`. It is commonly used when the number of iterations is unknown beforehand and depends on dynamic conditions.\n","\n","---\n","\n","#### **Syntax of a `while` Loop**  \n","```python\n","while condition:\n","    # Code block to execute\n","```\n","- **`condition`**: A Boolean expression that is evaluated before each iteration.  \n","- **Code Block**: The indented block of code that executes as long as the condition is `True`.\n","\n","---\n","\n","#### **Examples of Using a `while` Loop**\n","\n","1. **Basic Example**  \n","   ```python\n","   count = 1\n","   while count <= 5:\n","       print(count)\n","       count += 1\n","   ```\n","   **Output:**  \n","   ```\n","   1  \n","   2  \n","   3  \n","   4  \n","   5\n","   ```\n","\n","2. **Infinite Loop**  \n","   A `while` loop can run indefinitely if the condition never becomes `False`.  \n","   ```python\n","   while True:\n","       print(\"This is an infinite loop\")\n","       break  # Use `break` to exit\n","   ```\n","\n","3. **Using a `while` Loop to Process User Input**  \n","   ```python\n","   user_input = \"\"\n","   while user_input.lower() != \"quit\":\n","       user_input = input(\"Enter something (type 'quit' to exit): \")\n","   print(\"Goodbye!\")\n","   ```\n","\n","---\n","\n","#### **Advanced Use Cases of `while` Loops**\n","\n","1. **Using a `while` Loop with Multiple Conditions**  \n","   ```python\n","   x = 0\n","   while x < 10 and x % 2 == 0:\n","       print(x)\n","       x += 1\n","   ```\n","   **Output:**  \n","   ```\n","   0  \n","   2  \n","   4  \n","   6  \n","   8\n","   ```\n","\n","2. **Using `else` with a `while` Loop**  \n","   The `else` block executes when the condition becomes `False`.  \n","   ```python\n","   count = 1\n","   while count <= 3:\n","       print(count)\n","       count += 1\n","   else:\n","       print(\"Loop finished\")\n","   ```\n","   **Output:**  \n","   ```\n","   1  \n","   2  \n","   3  \n","   Loop finished\n","   ```\n","\n","3. **Implementing a Countdown Timer**  \n","   ```python\n","   import time\n","\n","   n = 5\n","   while n > 0:\n","       print(n)\n","       n -= 1\n","       time.sleep(1)  # Pause for 1 second\n","   print(\"Time's up!\")\n","   ```\n","\n","---\n","\n","#### **Common Mistakes with `while` Loops**\n","\n","1. **Forgetting to Update the Condition:**  \n","   This results in an infinite loop.  \n","   ```python\n","   x = 1\n","   while x < 5:\n","       print(x)\n","       # Missing x += 1\n","   ```\n","\n","2. **Using the Wrong Condition:**  \n","   A poorly constructed condition may result in a loop that never executes or terminates prematurely.  \n","\n","---\n","\n","#### **Applications of `while` Loops**\n","\n","1. **Game Loop**  \n","   A `while` loop can be used to keep a game running until the user exits.  \n","   ```python\n","   while not game_over:\n","       process_game_logic()\n","   ```\n","\n","2. **Validating User Input**  \n","   ```python\n","   age = -1\n","   while age < 0 or age > 120:\n","       age = int(input(\"Enter a valid age (0-120): \"))\n","   ```\n","\n","3. **Simulating a Process**  \n","   ```python\n","   progress = 0\n","   while progress <= 100:\n","       print(f\"Progress: {progress}%\")\n","       progress += 10\n","   ```\n","\n","---\n","\n","#### **Best Practices for Using `while` Loops**\n","\n","1. Ensure the condition will eventually become `False` to avoid infinite loops.  \n","2. Use `break` statements to exit early if necessary.  \n","3. Test the loop with various inputs to handle edge cases.  \n","4. Keep the loop logic simple and readable.\n","\n","---\n"]},{"cell_type":"markdown","metadata":{"id":"Y0MuF6smP1Tr"},"source":["## **MCQs: The `while` Loop**\n","\n","1. **What is the primary purpose of a `while` loop?**  \n","   a) To iterate over a sequence  \n","   b) To execute a block of code repeatedly as long as a condition is `True`   \n","   c) To define a function  \n","   d) To iterate for a specific number of times  \n","\n","2. **What will happen if the condition in a `while` loop never becomes `False`?**  \n","   a) The loop will terminate immediately  \n","   b) The loop will run indefinitely   \n","   c) The loop will raise an error  \n","   d) The program will crash  \n","\n","3. **What is the output of the following code?**  \n","   ```python\n","   count = 3\n","   while count > 0:\n","       print(count)\n","       count -= 1\n","   ```  \n","   a) `3 3 3`  \n","   b) `3 2 1 0`  \n","   c) `3 2 1`   \n","   d) No output  \n","\n","4. **Which keyword can be used to exit a `while` loop prematurely?**  \n","   a) `continue`  \n","   b) `break`   \n","   c) `exit`  \n","   d) `stop`  \n","\n","5. **Which of the following is NOT true about the `while` loop?**  \n","   a) The condition is checked before each iteration  \n","   b) The `else` block runs if the condition becomes `False`  \n","   c) The `while` loop can iterate over a sequence   \n","   d) Infinite loops occur if the condition never becomes `False`  \n","\n","6. **What is the output of the following code?**  \n","   ```python\n","   x = 0\n","   while x < 3:\n","       print(x, end=\" \")\n","       x += 1\n","   else:\n","       print(\"Done\")\n","   ```  \n","   a) `0 1 2 Done`   \n","   b) `0 1 2`  \n","   c) `Done`  \n","   d) No output  \n","\n","7. **Which of the following scenarios is best suited for a `while` loop?**  \n","   a) Iterating over the elements of a list  \n","   b) Repeating code until the user inputs \"quit\"   \n","   c) Generating a multiplication table  \n","   d) Printing a pattern  \n","\n","8. **What will the following code do?**  \n","   ```python\n","   while True:\n","       print(\"Looping\")\n","       break\n","   ```  \n","   a) Print `\"Looping\"` indefinitely  \n","   b) Print `\"Looping\"` once and exit   \n","   c) Do nothing  \n","   d) Raise an error  \n","\n","9. **What will happen if the condition in the `while` loop is initially `False`?**  \n","   a) The loop will execute once  \n","   b) The loop will execute indefinitely  \n","   c) The loop will be skipped   \n","   d) An error will occur  \n","\n","10. **Which of the following is a common mistake when using `while` loops?**  \n","    a) Using breakpoints  \n","    b) Forgetting to update the condition inside the loop   \n","    c) Iterating over a range  \n","    d) Combining multiple conditions  \n","\n","---\n"]},{"cell_type":"markdown","metadata":{"id":"E-sx67tRRLDJ"},"source":["## **Coding Exercises: The `while` Loop**\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"BlhZNa37jx3_"},"source":["### **1. Print Numbers from 1 to 5**  \n","**Problem:** Write a `while` loop to print numbers from 1 to 5.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"VvmPC4xZl37d"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FKDkDwaGjrR5"},"source":["### **2. Calculate the Sum of Numbers from 1 to 10**  \n","**Problem:** Use a `while` loop to calculate the sum of numbers from 1 to 10.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"C7UhywqWlx5b"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"osyaBUYGjmZK"},"source":["### **3. Validate User Input**  \n","**Problem:** Keep asking the user for a positive number until they provide one.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"FsExXeBslsdk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jZ8DYuzdjfae"},"source":["### **4. Print a Countdown**  \n","**Problem:** Write a program to count down from 5 to 1 and print `\"Blastoff!\"` afterward.  \n","**Solution:**  \n"]},{"cell_type":"code","source":[],"metadata":{"id":"FEn2ryoUlnte"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dYkwKDcgjZb2"},"source":["### **5. Find the Factorial of a Number**  \n","**Problem:** Write a program to find the factorial of a number using a `while` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"4Y5Zrd_UljEW"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"B_7c0lM6jRTN"},"source":["### **6. Print the First 10 Even Numbers**  \n","**Problem:** Use a `while` loop to print the first 10 even numbers.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"M9cmtA6Vleoo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dDqRU5h1jHlE"},"source":["### **7. Sum Digits of a Number**  \n","**Problem:** Write a program to calculate the sum of the digits of a number using a `while` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"Bvwdn7yOlZ5Z"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UqztaI6SjACK"},"source":["### **8. Reverse a Number**  \n","**Problem:** Write a program to reverse a number using a `while` loop.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"Vhg7Z-gblU2N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4Mj_MpLGi4c4"},"source":["### **9. Infinite Loop with Break**  \n","**Problem:** Write a program that prints numbers starting from 1 in an infinite loop but stops when the number reaches 5 using `break`.  \n","**Solution:**  \n"]},{"cell_type":"code","source":["\n"],"metadata":{"id":"QtWuMBsdlK_I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1q7aQHgeitKj"},"source":["### **10. Guessing Game**  \n","**Problem:** Write a program where the user guesses a number between 1 and 10 until they get it right.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mBGJUX0yrCN6"},"outputs":[],"source":["\n"]},{"cell_type":"markdown","metadata":{"id":"sF-oD2N_R5Gm"},"source":["## **4.3 Loop Control Keywords**\n","\n","---\n","\n","#### **What Are Loop Control Keywords?**  \n","Loop control keywords in Python (`break`, `continue`, and `pass`) allow you to control the flow of a loop. These keywords help in managing iterations based on specific conditions or bypassing certain parts of the code.\n","\n","---\n","\n","### **1. `break` Keyword**  \n","\n","The `break` keyword is used to terminate a loop prematurely when a certain condition is met. It immediately exits the loop and continues execution after the loop.  \n","\n","#### **Syntax**  \n","```python\n","for item in iterable:\n","    if condition:\n","        break\n","```\n","\n","#### **Example**  \n","```python\n","for num in range(1, 10):\n","    if num == 5:\n","        print(\"Loop terminated.\")\n","        break\n","    print(num)\n","```\n","\n","**Output:**  \n","```\n","1  \n","2  \n","3  \n","4  \n","Loop terminated.\n","```\n","\n","---\n","\n","### **2. `continue` Keyword**  \n","\n","The `continue` keyword is used to skip the current iteration and move to the next iteration of the loop.  \n","\n","#### **Syntax**  \n","```python\n","for item in iterable:\n","    if condition:\n","        continue\n","    # Code here will be skipped if condition is True\n","```\n","\n","#### **Example**  \n","```python\n","for num in range(1, 6):\n","    if num == 3:\n","        continue\n","    print(num)\n","```\n","\n","**Output:**  \n","```\n","1  \n","2  \n","4  \n","5\n","```\n","\n","---\n","\n","### **3. `pass` Keyword**  \n","\n","The `pass` keyword does nothing and is used as a placeholder in loops or other control structures where syntactically some code is required but nothing needs to be executed.  \n","\n","#### **Syntax**  \n","```python\n","for item in iterable:\n","    if condition:\n","        pass\n","    # Code continues as usual\n","```\n","\n","#### **Example**  \n","```python\n","for num in range(1, 4):\n","    if num == 2:\n","        pass  # Placeholder\n","    print(num)\n","```\n","\n","**Output:**  \n","```\n","1  \n","2  \n","3\n","```\n","\n","---\n","\n","#### **Comparison of Keywords**\n","\n","| Keyword   | Purpose                                                                 | Example Use Case                                  |\n","|-----------|-------------------------------------------------------------------------|-------------------------------------------------|\n","| `break`   | Exits the loop entirely when a condition is met.                        | Stop a search after finding the desired result. |\n","| `continue`| Skips the rest of the current iteration and moves to the next.          | Skip invalid inputs in a loop.                  |\n","| `pass`    | Does nothing; used as a placeholder or for future implementation.       | Placeholder for a condition or loop.            |\n","\n","---\n","\n","#### **Applications of Loop Control Keywords**\n","\n","1. **Using `break` to Exit a Search**  \n","   ```python\n","   names = [\"Alice\", \"Bob\", \"Charlie\", \"David\"]\n","   for name in names:\n","       if name == \"Charlie\":\n","           print(f\"{name} found!\")\n","           break\n","   ```\n","   **Output:**  \n","   ```\n","   Charlie found!\n","   ```\n","\n","2. **Using `continue` to Skip Invalid Inputs**  \n","   ```python\n","   numbers = [1, -2, 3, -4, 5]\n","   for num in numbers:\n","       if num < 0:\n","           continue\n","       print(num)\n","   ```\n","   **Output:**  \n","   ```\n","   1  \n","   3  \n","   5\n","   ```\n","\n","3. **Using `pass` as a Placeholder**  \n","   ```python\n","   for num in range(1, 4):\n","       if num == 2:\n","           pass  # Placeholder for future implementation\n","       print(num)\n","   ```\n","   **Output:**  \n","   ```\n","   1  \n","   2  \n","   3\n","   ```\n","\n","---\n","\n","#### **Best Practices**\n","\n","1. Avoid excessive use of `break` and `continue` to maintain readability.\n","2. Use `pass` only when necessary as a placeholder.\n","3. Ensure `break` conditions are logical and prevent infinite loops.\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"7AOWBT3OSLtT"},"source":["## **MCQs: Loop Control Keywords**\n","\n","1. **What does the `break` keyword do in a loop?**  \n","   a) Skips the current iteration  \n","   b) Terminates the loop entirely   \n","   c) Does nothing  \n","   d) Moves to the next iteration  \n","\n","2. **What is the purpose of the `continue` keyword?**  \n","   a) Terminates the loop entirely  \n","   b) Exits the current iteration and skips to the next   \n","   c) Executes all iterations  \n","   d) Exits the program  \n","\n","3. **What is the `pass` keyword used for?**  \n","   a) To skip the rest of the loop  \n","   b) As a placeholder for incomplete code   \n","   c) To terminate the loop  \n","   d) To repeat the loop  \n","\n","4. **What will the following code output?**  \n","   ```python\n","   for i in range(5):\n","       if i == 3:\n","           break\n","       print(i)\n","   ```  \n","   a) `0 1 2 3 4`  \n","   b) `0 1 2`   \n","   c) `0 1`  \n","   d) `0`  \n","\n","5. **What will the following code output?**  \n","   ```python\n","   for i in range(5):\n","       if i == 2:\n","           continue\n","       print(i)\n","   ```  \n","   a) `0 1 2 3 4`  \n","   b) `0 1 3 4`   \n","   c) `1 3 4`  \n","   d) `0 1 2 4`  \n","\n","6. **Which of the following statements is true about `pass`?**  \n","   a) It terminates the loop.  \n","   b) It skips the current iteration.  \n","   c) It does nothing and is used as a placeholder.   \n","   d) It moves the loop to the next iteration.  \n","\n","7. **What will happen if the `break` keyword is used in a nested loop?**  \n","   a) It will exit all loops.  \n","   b) It will only exit the innermost loop   \n","   c) It will terminate the program.  \n","   d) It will raise an error.  \n","\n","8. **What will the following code output?**  \n","   ```python\n","   for i in range(3):\n","       for j in range(3):\n","           if i == j:\n","               break\n","           print(i, j)\n","   ```  \n","   a) `0 1 0 2 1 2`  \n","   b) `0 0 1 1 2 2`  \n","   c) `0 1 0 2 1 2 1`  \n","   d) `1 0 2 0 2 1`   \n","\n","9. **What happens when `continue` is used in a `while` loop?**  \n","   a) The loop terminates.  \n","   b) The loop skips to the next iteration.   \n","   c) The loop raises an error.  \n","   d) The loop pauses execution.  \n","\n","10. **Which of the following code snippets correctly uses `pass`?**  \n","    a)  \n","    ```python\n","    for i in range(3):\n","        pass i\n","    ```  \n","    b)  \n","    ```python\n","    for i in range(3):\n","        pass\n","        print(i)\n","    ```   \n","    c)  \n","    ```python\n","    for i in range(3):\n","        if i == 1 pass\n","    ```  \n","    d) None of the above  \n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"Yn9kT74yScGZ"},"source":["## **Coding Exercises: Loop Control Keywords**\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"DgHqRBfRlwac"},"source":["### **1. Using `break` in a Loop**  \n","**Problem:** Write a program that prints numbers from 1 to 10 but stops when the number is 5.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xlVWKiotq2Fs"},"outputs":[],"source":["\n"]},{"cell_type":"markdown","metadata":{"id":"5_J8WUnOlpNL"},"source":["### **2. Using `continue` in a Loop**  \n","**Problem:** Write a program that skips printing the number 3 in a loop from 1 to 5.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OZpj_vg_qvIB"},"outputs":[],"source":["\n"]},{"cell_type":"markdown","metadata":{"id":"O6JtIapJlf3W"},"source":["### **3. Using `pass` in a Loop**  \n","**Problem:** Write a program where a `for` loop iterates over a list of numbers but does nothing when the number is negative.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"elNHptPPqo0z"},"outputs":[],"source":["numbers = [5, 7, 8, 4, -5, -10, 3]\n","for number in numbers:\n","  print(number, end=\" \")\n","\n","  if number < 0:\n","    pass\n"]},{"cell_type":"markdown","metadata":{"id":"8BzotOX_lTkN"},"source":["### **4. Nested Loop with `break`**  \n","**Problem:** Write a program with a nested loop where the inner loop stops when the variable `j` equals 2.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VaZkAQJyqhzq"},"outputs":[],"source":["for i in range (1,4):\n","  for j in range(1,4):\n","    if j==2:\n","      break\n","\n","    print(i, j)\n","\n","  print()\n","\n"]},{"cell_type":"markdown","metadata":{"id":"MXsnDmljlKZ5"},"source":["### **5. Counting with `continue`**  \n","**Problem:** Write a program to count how many numbers between 1 and 10 are divisible by 3 but skip those divisible by 2.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XEyxJCXAqaId"},"outputs":[],"source":["count = 0\n","for num in range (1,11):\n","\n","  if num%3==0:\n","\n","    if num%2==0:\n","      continue\n","    count+=1\n","\n","print(f\"I found {count} numbers\")\n"]},{"cell_type":"code","source":[],"metadata":{"id":"xTYuF9PHjYB3"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HNPONY63jYbp"},"outputs":[],"source":["count = 0\n","for num in range (1,11):\n","  if num%3==0 and num%2!=0:\n","    count+=1\n","\n","print(f\"I found {count} numbers\")\n"]},{"cell_type":"markdown","metadata":{"id":"Kc9lpd2skx0B"},"source":["### **6. Simulate a Search Using `break`**  \n","**Problem:** Write a program that simulates searching for the number 7 in a list. Stop the loop when the number is found.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3fezWTYepzx9"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"SrlMZS5gkdFu"},"source":["**7. Use while with `continue`**  \n","**Problem:** Write a program to print odd numbers between 1 and 10 using a `while` loop and `continue`.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F9NWSsiFpJfS"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"MNX1FXjBkU-8"},"source":["### **8. Loop Until User Enters a Specific Input**  \n","**Problem:** Write a program to ask for the user’s input repeatedly until they type `\"exit\"`.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FRPZ3zIto_gw"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"YE-Nrv0ckPj8"},"source":["### **9. Placeholder with `pass` in Conditional Statements**  \n","**Problem:** Write a program to check numbers from 1 to 5. Use `pass` as a placeholder if the number is 3.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wfPUnGgqo4eJ"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"-W4iEx9vkJKX"},"source":["### **10. Nested Loops with `break` and `continue`**  \n","**Problem:** Write a program where an inner loop stops with `break` if `j == 2` and the outer loop skips iteration when `i == 1` using `continue`.  \n","**Solution:**  \n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7b5m0nbDojGB"},"outputs":[],"source":["for i in range(1,4):\n","  if i==1:\n","    continue\n","  for j in range(1,4):\n","    if j==2:\n","      break\n","\n","    print(i,j)\n"]},{"cell_type":"markdown","source":["## **4.4 Pattern Printing Problems**  \n","---\n","\n","**Level 1: Basic Patterns:**  \n","\n","---"],"metadata":{"id":"eK4m9G1FC-hh"}},{"cell_type":"markdown","source":["## **1. Square Pattern**\n","**Explanation**\n","A square pattern consists of `n` rows and `n` columns filled with `*`. We use two nested loops:\n","- The **outer loop** controls the number of rows.\n","- The **inner loop** prints `n` stars (`*`) in each row.\n","\n","### **Output**\n","```\n","*****\n","*****\n","*****\n","*****\n","*****\n","```\n","\n","**Python Code**\n"],"metadata":{"id":"SzILxPfPyeZd"}},{"cell_type":"code","source":["n = int(input(\"Enter the number: \"))\n","for row in range(1, n+1):\n","  for col in range(n):\n","    print(\"*\",end=\" \")\n","  print(end=\"\\n\")"],"metadata":{"id":"D_MbIyChyw4P","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744289094811,"user_tz":-330,"elapsed":2850,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"0526dad2-15c7-40a3-e733-d45fece54aa8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 6\n","* * * * * * \n","* * * * * * \n","* * * * * * \n","* * * * * * \n","* * * * * * \n","* * * * * * \n"]}]},{"cell_type":"code","source":["n = int(input(\"Enter the number: \"))\n","for row in range(1, n+1):\n","  print(\"* \"*n)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ykx9mAdbRw8i","executionInfo":{"status":"ok","timestamp":1744289330324,"user_tz":-330,"elapsed":2382,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"0d3f47dc-fffc-4a4c-f70a-1247359fe1be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 6\n","* * * * * * \n","* * * * * * \n","* * * * * * \n","* * * * * * \n","* * * * * * \n","* * * * * * \n"]}]},{"cell_type":"markdown","source":["## **2. Right-Angled Triangle (Left-Aligned)**\n","### **Explanation**\n","A right-angled triangle has an increasing number of `*` in each row:\n","- Row 1 has `1` star.\n","- Row 2 has `2` stars.\n","- ...\n","- Row `n` has `n` stars.\n","\n","### **Output**\n","```\n","*\n","**\n","***\n","****\n","*****\n","```\n","\n","### **Python Code**\n"],"metadata":{"id":"R_1L-06JyZuS"}},{"cell_type":"code","source":["n = int(input(\"Enter the number: \"))\n","for row in range(1, n+1):\n","  for col in range(row):\n","    print(\"*\",end=\" \")\n","  print(end=\"\\n\")"],"metadata":{"id":"Y8OFx_1BzYxj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744289244682,"user_tz":-330,"elapsed":8007,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"9afce88e-08b0-48c1-cbaf-5bae73278f1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 5\n","* \n","* * \n","* * * \n","* * * * \n","* * * * * \n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1,n+1):\n","  print(\"* \" * row)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CP1ZfP3wwdXr","executionInfo":{"status":"ok","timestamp":1744289874267,"user_tz":-330,"elapsed":12,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"fe03042c-8488-4fb2-be4c-34f63743086f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["* \n","* * \n","* * * \n","* * * * \n","* * * * * \n","* * * * * * \n"]}]},{"cell_type":"markdown","source":["## **3. Right-Angled Triangle (Right-Aligned)**\n","### **Explanation**\n","Instead of printing `*` directly, we print **spaces first**, then `*`.\n","- The first row has `n-1` spaces, then `1` star.\n","- The second row has `n-2` spaces, then `2` stars.\n","- ...\n","- The last row has `0` spaces, then `n` stars.\n","\n","### **Output**\n","```\n","    *\n","   **\n","  ***\n"," ****\n","*****\n","```\n","### **Python Code**\n"],"metadata":{"id":"t95EvEi4yMiz"}},{"cell_type":"code","source":["n = int(input(\"Enter the number: \"))\n","for row in range(1, n+1):\n","  for col in range(1,n+1-row):\n","    print(\" \",end=\" \")\n","\n","  for col in range(row):\n","    print(\"*\",end=\" \")\n","  print(end=\"\\n\")"],"metadata":{"id":"BsMNtPHVzi96","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744289488108,"user_tz":-330,"elapsed":2927,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"7fd02ac4-1c60-4535-990d-bb52b8b00393"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 6\n","          * \n","        * * \n","      * * * \n","    * * * * \n","  * * * * * \n","* * * * * * \n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1, n+1):\n","  print(\"  \"* (n-row), end=\"\")\n","\n","  print(\"* \"* row)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"61DnX7oVx4SY","executionInfo":{"status":"ok","timestamp":1744551440851,"user_tz":-330,"elapsed":19,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"89cd0455-180e-4741-c64a-68a7590ebd9c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          * \n","        * * \n","      * * * \n","    * * * * \n","  * * * * * \n","* * * * * * \n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1,n+1):\n","  print(\"  \"*(n-row) + \"* \"* row)\n"," #print(\"# \"*(n-row), \"* \"* row, sep=\"\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bq5MFcRy1TL_","executionInfo":{"status":"ok","timestamp":1744291839625,"user_tz":-330,"elapsed":6,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"125358d5-a289-49a8-f19f-240a39148308"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          * \n","        * * \n","      * * * \n","    * * * * \n","  * * * * * \n","* * * * * * \n"]}]},{"cell_type":"markdown","source":["## **4. Hollow Square**\n","### **Explanation**\n","A **hollow square** has:\n","- **First and last rows** filled with `*`.\n","- **Middle rows** have `*` at the beginning and end, with spaces in between.\n","\n","### **Output**\n","```\n","*****\n","*   *\n","*   *\n","*   *\n","*****\n","```\n","\n","### **Python Code**\n","\n"],"metadata":{"id":"NXoejsXwyISE"}},{"cell_type":"code","source":["n = 5\n","for row in range (1, n+1):\n","  if row == 1 or row == n:\n","    print(\"*\"  * n)\n","  else:\n","    print (\"*\" + \" \" * (n-2) + \"*\")"],"metadata":{"id":"B66pPu1ezq5M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744292463562,"user_tz":-330,"elapsed":54,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"e0ef4456-1456-43c1-c47e-38c3b5b52ec0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["*****\n","*   *\n","*   *\n","*   *\n","*****\n"]}]},{"cell_type":"code","source":["n = int(input(\"Enter the number: \"))\n","for row in range(1,1+n):\n","  for col in range(1,1+n):\n","    if row == 1 or row == n  or col == 1 or col == n:\n","      print(\"*\", end=\" \")\n","    else:\n","      print(\" \", end=\" \")\n","  print(end=\"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yNvt-9Wk9XPS","executionInfo":{"status":"ok","timestamp":1744549266349,"user_tz":-330,"elapsed":2235,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"2d6d5072-2aa3-4909-c838-4764b8dcfcd6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 6\n","* * * * * * \n","*         * \n","*         * \n","*         * \n","*         * \n","* * * * * * \n"]}]},{"cell_type":"markdown","source":["## **5. Hollow Right-Angled Triangle**\n","### **Explanation**\n","- The **first and last rows** are fully filled.\n","- The **middle rows** have `*` at the beginning and end, with spaces in between.\n","\n","### **Output**\n","```\n","*\n","**\n","* *\n","*  *\n","*****\n","```\n","\n","### **Python Code**\n","\n","\n","\n","---\n","\n"],"metadata":{"id":"uGvuQuncyCOB"}},{"cell_type":"code","source":["n = 5\n","for row in range(1,n+1):\n","  if row == 1 or row == n:\n","    print(\"*\" * row)\n","  else:\n","    print(\"*\" + \" \" * (row-2) + \"*\")"],"metadata":{"id":"kLycVlDszy1e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744292809398,"user_tz":-330,"elapsed":8,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"868fb06b-9806-40ec-95f0-9817a6ec1db6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["*\n","**\n","* *\n","*  *\n","*****\n"]}]},{"cell_type":"code","source":["n = int(input(\"Enter the number: \"))\n","for row in range(1,1+n):\n","  for col in range(1, row+1):\n","    if row == 1 or row == n or col == 1 or col == row:\n","      print(\"*\", end=\" \")\n","    else:\n","      print(\" \",end=\" \")\n","  print(end=\"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tzYc04zzD0YY","executionInfo":{"status":"ok","timestamp":1744550341436,"user_tz":-330,"elapsed":2354,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"155f5369-91a2-4e14-d9b8-276f2230e047"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the number: 6\n","* \n","* * \n","*   * \n","*     * \n","*       * \n","* * * * * * \n"]}]},{"cell_type":"markdown","source":["## **6. Increasing Numbers Triangle**\n","### **Explanation**\n","- Each row prints numbers from `1` to the row number.\n","- Example:\n","  - Row 1 → `1`\n","  - Row 2 → `12`\n","  - Row 3 → `123`\n","  - …\n","  - Row `n` → `123…n`\n","\n","\n","  ### **Output**\n","```\n","1\n","12\n","123\n","1234\n","12345\n","```\n","\n","### **Python Code**\n"],"metadata":{"id":"cSNYvWRrx6ZE"}},{"cell_type":"code","source":["n = 6\n","for row in range(1,n+1):\n","  for col in range(1, row+1):\n","    print(row,end=\" \")\n","\n","  print()\n","\n"],"metadata":{"id":"exodVvALVBMM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744550972104,"user_tz":-330,"elapsed":17,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"48c98faa-ccbd-46e2-9519-b09451f38cf5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 \n","2 2 \n","3 3 3 \n","4 4 4 4 \n","5 5 5 5 5 \n","6 6 6 6 6 6 \n"]}]},{"cell_type":"markdown","source":["**Level 2: Number-Based Patterns**\n"],"metadata":{"id":"LphBfKWj0DQx"}},{"cell_type":"markdown","source":["## **7. Repeated Number Square**\n","### **Explanation**\n","- Each row contains the same number `i` repeated `n` times.\n","\n","### **Output**\n","```\n","11111\n","22222\n","33333\n","44444\n","55555\n","```\n","\n","### **Python Code**\n"],"metadata":{"id":"VKoHxqDrxhFF"}},{"cell_type":"code","source":["n = 6\n","for row in range(1, n+1):\n","  for col in range(1, n+1):\n","    print(row,end=\" \")\n","\n","  print()"],"metadata":{"id":"9bgMxCL80JJG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744550828919,"user_tz":-330,"elapsed":9,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"18139b2d-1258-4297-c84d-41e8863aa941"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 1 1 1 1 1 \n","2 2 2 2 2 2 \n","3 3 3 3 3 3 \n","4 4 4 4 4 4 \n","5 5 5 5 5 5 \n","6 6 6 6 6 6 \n"]}]},{"cell_type":"markdown","source":["## **8. Number Pyramid**\n","### **Explanation**\n","- A **pyramid pattern** with numbers.\n","- **Spaces** are printed first, then numbers in increasing and decreasing order.\n","\n","### **Output**\n","```\n","    1\n","   121\n","  12321\n"," 1234321\n","123454321\n","```\n","### **Python Code**\n"],"metadata":{"id":"SSR9QPIYxRV3"}},{"cell_type":"code","source":["n = 5\n","for row in range(1,n+1):\n","  print(\"  \"* (n - row), end=\" \")\n","\n","  for col in range(1,row+1):\n","    print(col, end=\" \")\n","\n","  for col in range(row - 1, 0, -1):\n","    print(col,end=\" \")\n","\n","  print()"],"metadata":{"id":"65gIW_XW0TbJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744890163922,"user_tz":-330,"elapsed":11,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"ffeb11dc-1df3-4093-d010-6ac0d57d0019"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         1 \n","       1 2 1 \n","     1 2 3 2 1 \n","   1 2 3 4 3 2 1 \n"," 1 2 3 4 5 4 3 2 1 \n"]}]},{"cell_type":"markdown","source":["## **9. Floyd’s Triangle**\n","### **Explanation**\n","- **Numbers increase sequentially** from `1` onwards.\n","- The **row number** determines how many numbers are in that row.\n","\n","### **Output**\n","```\n","1\n","2 3\n","4 5 6\n","7 8 9 10\n","```\n","\n","### **Python Code**\n"],"metadata":{"id":"6Jvl3vjvxLUe"}},{"cell_type":"code","source":["n = 4\n","num = 1\n","for row in range(1,n+1):\n","  for col in range(1,row+1):\n","    print(num,end=\" \")\n","    num = num + 1\n","  print()"],"metadata":{"id":"A1TEXg4c0Z-I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **10. Pascal’s Triangle**\n","### **Explanation**\n","- Each row follows **Pascal’s Triangle** formula:  \n","  \\[\n","  C(n, k) = \\frac{n!}{k!(n-k)!}\n","  \\]\n","- Each element is the **sum of the two elements above it**.\n","\n","### **Output**\n","```\n","    1\n","   1 1\n","  1 2 1\n"," 1 3 3 1\n","1 4 6 4 1\n","```\n","\n","\n","### **Python Code**\n","\n","\n","**Level 3: Star and Alphabet Patterns**\n","\n","---\n","\n"],"metadata":{"id":"Au1PkM1PxBV-"}},{"cell_type":"code","source":[],"metadata":{"id":"ZLLQUi-b0iRo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **11. Diamond Pattern**\n","### **Explanation**\n","- The pattern consists of **two triangles**:\n","  - The **upper half** increases in size.\n","  - The **lower half** decreases symmetrically.\n","- Spaces are printed before stars to align them properly.\n","\n","### **Output**\n","```\n","    *\n","   ***\n","  *****\n","   ***\n","    *\n","```\n","### **Python Code**\n"],"metadata":{"id":"Bm2xSRB3w7qG"}},{"cell_type":"code","source":[],"metadata":{"id":"EJlnE5l40pUZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **12. Butterfly Pattern**\n","### **Explanation**\n","- It consists of **two mirrored halves**.\n","- Each row contains:\n","  - Increasing `*` from **1 to n**.\n","  - Spaces in the middle.\n","  - Decreasing `*` from **n to 1**.\n","\n","\n","### **Output**\n","```\n","*        *\n","**      **\n","***    ***\n","****  ****\n","**********\n","****  ****\n","***    ***\n","**      **\n","*        *\n","```\n","### **Python Code**\n"],"metadata":{"id":"ECSGFq1Hw21L"}},{"cell_type":"code","source":[],"metadata":{"id":"zLwTREHi0vhP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **13. Alphabet Pyramid**\n","### **Explanation**\n","- Similar to the number pyramid, but uses **A, B, C, …** instead of numbers.\n","\n","### **Output**\n","```\n","    A\n","   ABA\n","  ABCBA\n"," ABCDCBA\n","ABCDEDCBA\n","```\n","\n","### **Python Code**\n"],"metadata":{"id":"ozFITJlowyEI"}},{"cell_type":"code","source":["n = 5\n","for row in range(1,n+1):\n","  print(\"  \"*(n-row), end=\" \")\n","  for col in range(1,row + 1):\n","    print(chr(64+col), end=\" \")\n","  for col in range(row - 1, 0, -1):\n","    print(chr(64+col), end=\" \")\n","\n","  print()"],"metadata":{"id":"QigpT31D01Io","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1744891258675,"user_tz":-330,"elapsed":55,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"7e1020ed-d587-4116-d9bc-bea798e86155"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["         A \n","       A B A \n","     A B C B A \n","   A B C D C B A \n"," A B C D E D C B A \n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1,n+1):\n","  for col in range(n):\n","    print(chr(64+row), end=\" \")\n","\n","  print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0P7N2ZL4oezf","executionInfo":{"status":"ok","timestamp":1744892133839,"user_tz":-330,"elapsed":28,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"838a06c9-f41b-474d-ec03-f8ae16a68ae5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["A A A A A A \n","B B B B B B \n","C C C C C C \n","D D D D D D \n","E E E E E E \n","F F F F F F \n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1, n+1):\n","  if row == 1 or row == n:\n","    print(chr(64+row) *n)\n","  else:\n","    print(chr(64+row)+ \" \" * (n - 2)+ chr(64+row))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K53_6fBAsOfh","executionInfo":{"status":"ok","timestamp":1744893121944,"user_tz":-330,"elapsed":20,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"2ae73ac2-7ff0-4f47-fb39-6045bca14758"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AAAAAA\n","B    B\n","C    C\n","D    D\n","E    E\n","FFFFFF\n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1,n+1):\n","  for col in range(row):\n","    print(chr(64+row), end=\" \")\n","\n","  print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pujkC8P5vPGS","executionInfo":{"status":"ok","timestamp":1744893190482,"user_tz":-330,"elapsed":13,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"34d58e5e-066b-4197-c140-3f004991cc4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["A \n","B B \n","C C C \n","D D D D \n","E E E E E \n","F F F F F F \n"]}]},{"cell_type":"code","source":["n = 6\n","for row in range(1,n+1):\n","  for col in range(1,n+1-row):\n","    print(\" \",end=\" \")\n","  for col in range(row):\n","    print(chr(64+row),end = \" \")\n","  print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JQ_nleGRvXkB","executionInfo":{"status":"ok","timestamp":1744893492167,"user_tz":-330,"elapsed":18,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"e4c10949-f66c-4b52-8c46-ea64f06175ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["          A \n","        B B \n","      C C C \n","    D D D D \n","  E E E E E \n","F F F F F F \n"]}]},{"cell_type":"code","source":["n = 8\n","for row in range(1,1+n):\n","  if row == 1 or row == n:\n","    print(chr(64+row)*row)\n","  else:\n","    print(chr(64+row) + \" \"* (row-2) + chr(64+row))"],"metadata":{"id":"KsUJuwBl0so2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1745153303143,"user_tz":-330,"elapsed":8,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"00e16f53-ddb1-4a02-9162-c3ce0797dd7e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["A\n","BB\n","C C\n","D  D\n","E   E\n","F    F\n","G     G\n","HHHHHHHH\n"]}]},{"cell_type":"code","source":["n= 8\n","for row in range(1,1+n):\n","  for col in range(1,n+1-row):\n","    if row == 1 or row == n:\n","        print(chr(64+row)*row)\n","    else:\n","        print(chr(64+row) + \" \"* (row-2) + chr(64+row))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"90PtPnT6PvX4","executionInfo":{"status":"ok","timestamp":1745153926976,"user_tz":-330,"elapsed":9,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"5b804e2f-91a5-4f00-9e68-9ff0987a096e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["A\n","A\n","A\n","A\n","A\n","A\n","A\n","BB\n","BB\n","BB\n","BB\n","BB\n","BB\n","C C\n","C C\n","C C\n","C C\n","C C\n","D  D\n","D  D\n","D  D\n","D  D\n","E   E\n","E   E\n","E   E\n","F    F\n","F    F\n","G     G\n"]}]},{"cell_type":"markdown","source":["## **14. Zig-Zag Pattern**\n","### **Explanation**\n","- The pattern looks like a wave.\n","- Spaces are printed in a way that creates a **zig-zag shape**.\n","\n","### **Output**\n","```\n","  *   *   *   *\n"," * * * * * * *\n","  *   *   *   *\n","```\n","\n","### **Python Code**\n"],"metadata":{"id":"GZXnKmUnwrRf"}},{"cell_type":"code","source":[],"metadata":{"id":"QmyAu47O06Zk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"1zm3RVIZwrrX"}},{"cell_type":"markdown","source":["\n","## **15. Cross ‘X’ Pattern**\n","### **Explanation**\n","- The pattern has `*` at **diagonal positions**.\n","\n","### **Output**\n","```\n","*       *\n","  *   *\n","    *\n","  *   *\n","*       *\n","```\n","\n","### **Python Code**"],"metadata":{"id":"edMW5hJlwmK5"}},{"cell_type":"code","source":["\n","\n"],"metadata":{"id":"UABkrfflwPGE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["number = [2,4,5,6,7]\n","sum = 0\n","for num in number:\n","  sum+=num\n","print(sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6vroGAdIadsv","executionInfo":{"status":"ok","timestamp":1745156256987,"user_tz":-330,"elapsed":9,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"095cd0a8-fa11-4d11-af7f-5b71822e1e4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["24\n"]}]},{"cell_type":"code","source":["num = 654\n","sum = 0\n","while num > 0:\n","  sum+= num % 10\n","  num = num//10\n","print(sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t3cEkmVGbNsQ","executionInfo":{"status":"ok","timestamp":1745156583527,"user_tz":-330,"elapsed":13,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"6abcc4a8-d7b1-416d-c592-295c411902de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["15\n"]}]},{"cell_type":"code","source":["num = 567\n","count = 0\n","while num > 0:\n","  num = num//10\n","  count+=1\n","print(count)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KLvKl45wcUu3","executionInfo":{"status":"ok","timestamp":1745156884415,"user_tz":-330,"elapsed":8,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"111cb17f-e7e3-4aaf-8a27-b3c720891fa7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":["num = 5\n","fact = 1\n","\n","while num > 0:\n","  fact*=num\n","  num-=1\n","print(fact)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zWTkVlp8dUJz","executionInfo":{"status":"ok","timestamp":1745157149385,"user_tz":-330,"elapsed":10,"user":{"displayName":"Ankita Bera","userId":"05862334649226863851"}},"outputId":"6039bd5a-cf01-43d7-c16a-4bb4c2998ffa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["120\n"]}]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.12.5"}},"nbformat":4,"nbformat_minor":0}